package com.projects.queue.model;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.Data;

import java.time.Instant;
import java.util.Date;
import java.util.List;
import java.util.Set;

@Entity
@Data
@Table(name = "questions")
public class Question {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "user_id")
    @JsonManagedReference
    private User user;

    private String title;
    private String text;
    private Instant createdAt;

    @Lob
    private Byte[] image;

    private Integer score;

    @OneToMany(mappedBy = "question")
    @JsonBackReference
    private List<Answer> answers;

    @ManyToMany
    @JoinTable(
            name = "question_likers",
            joinColumns = @JoinColumn(name = "question_id"),
            inverseJoinColumns = @JoinColumn(name = "user_id")
    )
    private Set<User> likers;

    @ManyToMany
    @JoinTable(
            name = "question_dislikers",
            joinColumns = @JoinColumn(name = "question_id"),
            inverseJoinColumns = @JoinColumn(name = "user_id")
    )
    private Set<User> dislikers;

    public Question() {
    }

    public Question(Long id, User user, String title, String text, Instant createdAt, Byte[] image) {
        this.user = user;
        this.title = title;
        this.text = text;
        this.createdAt = createdAt;
        this.image = image;
    }

    // Getters and Setters (Generated by Lombok)

    public Long getId() {
        return id;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public String getCreatedAt() {
        return createdAt.toString();
    }

    public void setCreatedAt(Instant createdAt) {
        this.createdAt = createdAt;
    }

    public Byte[] getImage() {
        return image;
    }

    public void setImage(Byte[] image) {
        this.image = image;
    }

    public Integer getScore() {
        return score;
    }

    public void setScore(Integer score) {
        this.score = score;
    }

    public Set<User> getLikers() {
        return likers;
    }

    public void setLikers(Set<User> likers) {
        this.likers = likers;
    }

    public Set<User> getDislikers() {
        return dislikers;
    }

    public void setDislikers(Set<User> dislikers) {
        this.dislikers = dislikers;
    }

    @Override
    public String toString() {
        return "{" +
                "\"id\": " + id +
                ", \"user\": " + (user != null ? user.getId() : null) +
                ", \"title\": \"" + title + '\"' +
                ", \"text\": \"" + text + '\"' +
                ", \"createdAt\": \"" + createdAt + '\"' +
                ", \"score\": " + score +
                ", \"likers\": " + likers +
                ", \"dislikers\": " + dislikers +
                '}';
    }
}
